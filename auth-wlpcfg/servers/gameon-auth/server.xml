<server description="Game On! Auth Service">

    <!-- Enable features -->
  <featureManager>
    <feature>websocket-1.1</feature>
    <feature>localConnector-1.0</feature>
    <feature>jaxrs-2.0</feature>
    <feature>cdi-1.2</feature>
    <feature>ssl-1.0</feature>
    <feature>jsonp-1.0</feature>
    <feature>jndi-1.0</feature>
    <feature>concurrent-1.0</feature>
  </featureManager>

  <keyStore id="defaultKeyStore" password="testOnlyKeystore"/>
  <keyStore id="defaultTrustStore" location="truststore.jks" password="truststore"/>

  <sslDefault sslRef="DefaultSSLSettings"/>
  <ssl id="DefaultSSLSettings" keyStoreRef="defaultKeyStore" trustStoreRef="defaultTrustStore"/>

  <!-- To access this server from a remote client add a host attribute to
    the following element, e.g. host="*" -->
  <httpEndpoint host="*" httpPort="-1" httpsPort="9443" id="defaultHttpEndpoint">
    <accessLogging
        filepath="${server.output.dir}/logs/http_defaultEndpoint_access.log"
        logFormat='%h %u %t "%r" %s %b %D %{User-agent}i'>
    </accessLogging>
  </httpEndpoint>

  <cors allowedMethods="GET" allowedOrigins="*" domain="/auth" maxAge="86400"/>

  <!-- Signed JWT keystore info -->
  <jndiEntry jndiName="jwtKeyStore" value="${server.config.dir}/resources/security/key.jks"/>
  <jndiEntry jndiName="jwtKeyStorePassword" value="testOnlyKeystore"/>
  <jndiEntry jndiName="jwtKeyStoreAlias" value="default"/>

  <jndiEntry jndiName="authURL" value="${env.FRONT_END_AUTH_URL}"/>
  <jndiEntry jndiName="authCallbackURLSuccess" value="${env.FRONT_END_SUCCESS_CALLBACK}"/>
  <jndiEntry jndiName="authCallbackURLFailure" value="${env.FRONT_END_FAIL_CALLBACK}"/>
  <jndiEntry jndiName="systemId" value="${env.SYSTEM_ID}"/>

  <logging traceSpecification="*=info:org.gameontext.*=all"/>

  <!-- Twitter Application Info... -->
  <jndiEntry jndiName="twitterOAuthConsumerKey" value="${env.TWITTER_CONSUMER_KEY}"/>
  <jndiEntry jndiName="twitterOAuthConsumerSecret" value="${env.TWITTER_CONSUMER_SECRET}"/>

  <!-- Facebook Application Info...  -->
  <jndiEntry jndiName="facebookAppID" value="${env.FACEBOOK_APP_ID}"/>
  <jndiEntry jndiName="facebookSecret" value="${env.FACEBOOK_APP_SECRET}"/>

  <!-- Google Application Info...  -->
  <jndiEntry jndiName="googleOAuthConsumerKey" value="${env.GOOGLE_APP_ID}"/>
  <jndiEntry jndiName="googleOAuthConsumerSecret" value="${env.GOOGLE_APP_SECRET}"/>

  <!-- Github Application Info...  -->
  <jndiEntry jndiName="gitHubOAuthKey" value="${env.GITHUB_APP_ID}"/>
  <jndiEntry jndiName="gitHubOAuthSecret" value="${env.GITHUB_APP_SECRET}"/>

  <jndiEntry jndiName="kafkaUrl" value="${env.KAFKA_SERVICE_URL}"/>

  <jndiEntry jndiName="developmentMode" value="${env.GAMEON_MODE}"/>

  <applicationMonitor dropinsEnabled="false" updateTrigger="mbean"/>

  <!-- This is required to prevent the web apps from being lazily loaded -->
  <webContainer deferServletLoad="false"/>
  <!-- The JVM can get confused about available CPU in virtualized envs -->
  <executor coreThreads="5"  />

  <!-- new API as a separate war -->
  <webApplication contextRoot="/auth" id="auth-app" location="auth-app.war" name="auth-app" />
  
  <include location="${env.GAMEON_MODE}-local.xml" optional="true" />
  <include location="${env.GAMEON_MODE}-logCollector.xml" optional="true" />

</server>
